{"version":3,"sources":["../src/constants.js","../src/render/dom.js","../src/reconciler/diff.js","../src/h.js","diff-demo.js"],"names":["prefix","TEXT_NODE","OPERATION","ADD","REMOVE","REPLACE","UPDATE","RENDERED_INTERNAL_INSTANCE","INTERNAL_INSTANCE","HOST_COMPONENT","COMPOSITE_COMPONENT","HOST_ROOT","ENOUGH_TIME","ROOT_FIBER","INSTANCE_INNER_FIBER","getFirstChildNode","node","Node","firstChild","removeNode","parentNode","childNode","removeChild","appendNode","appendChild","getParentNode","replaceNode","newNode","oldNode","replaceChild","createNode","element","type","props","document","createTextNode","textContent","createElement","setNodeAttributes","eventProxy","e","_listener","attributeHandler","listener","eventName","eventFunc","addEventListener","unlistener","removeEventListener","style","value","Object","keys","map","key","join","setAttribute","className","isListener","propName","startsWith","isStyle","isClass","isChildren","hasProperty","obj","prop","prototype","hasOwnProperty","call","HTMLElement","forEach","replace","toLowerCase","updateNodeAttributes","newProps","oldProps","Text","willRemoveProps","willSetProps","filter","removeNodeAttributes","removeAttribute","instantiateComponent","isHostComponent","internalInstance","HostComponent","CompositeComponent","currentElement","publicInstance","renderedInternalInstance","getHostNode","renderedElement","render","mount","componentDidMount","unmount","prevRenderedInternalInstance","prevRenderedElement","nextProps","nextRenderedElement","receive","prevNode","nextRenderedInternalInstance","nextNode","renderedInternalInstanceChildren","elementChildren","children","Array","isArray","nodeChildren","child","nodeChild","prevProps","prevRenderedInternalInstanceChildren","nextRenderedInternalInstanceChildren","prevElementChildren","nextElementChildren","operationQueue","i","length","prevElement","nextElement","push","canUpdate","operation","shift","unmountAll","containerNode","firstChildNode","rootInternalInstance","rootNode","prevInternalInstance","isReactComponent","Component","state","nextState","assign","h","concat","String","App","count","setState","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA;AACA,IAAMA,MAAM,GAAG,WAAf,EAEA;;AACO,IAAMC,SAAS,aAAMD,MAAN,cAAf,EAEP;;;AACO,IAAME,SAAS,GAAG;AACrBC,EAAAA,GAAG,YAAKH,MAAL,kBADkB;AAErBI,EAAAA,MAAM,YAAKJ,MAAL,qBAFe;AAGrBK,EAAAA,OAAO,YAAKL,MAAL,sBAHc;AAIrBM,EAAAA,MAAM,YAAKN,MAAL;AAJe,CAAlB,EAOP;;;AACO,IAAMO,0BAA0B,aAAMP,MAAN,+BAAhC;;AAEA,IAAMQ,iBAAiB,aAAMR,MAAN,sBAAvB,EAEP;;;AACO,IAAMS,cAAc,aAAMT,MAAN,mBAApB;;AAEA,IAAMU,mBAAmB,aAAMV,MAAN,wBAAzB;;AAEA,IAAMW,SAAS,aAAMX,MAAN,cAAf;;AAEA,IAAMY,WAAW,GAAG,CAApB;;AAEA,IAAMC,UAAU,aAAMb,MAAN,eAAhB;;AAEA,IAAMc,oBAAoB,aAAMd,MAAN,yBAA1B;;;;;;;;;;;;;;;;;;AC/BP;;;;AAEO,SAASe,iBAAT,CAA2BC,IAA3B,EAAiC;AACpC,MAAI,EAAEA,IAAI,YAAYC,IAAlB,CAAJ,EAA6B;AACzB,WAAO,IAAP;AACH;;AAED,SAAOD,IAAI,CAACE,UAAZ;AACH;;AAEM,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,SAAhC,EAA2C;AAC9C,MAAI,EAAED,UAAU,YAAYH,IAAxB,KAAiC,EAAEI,SAAS,YAAYJ,IAAvB,CAArC,EAAmE;AAC/D,WAAO,IAAP;AACH;;AAEDG,EAAAA,UAAU,CAACE,WAAX,CAAuBD,SAAvB;AACA,SAAOD,UAAP;AACH;;AAEM,SAASG,UAAT,CAAoBH,UAApB,EAAgCC,SAAhC,EAA2C;AAC9C,MAAI,EAAED,UAAU,YAAYH,IAAxB,KAAiC,EAAEI,SAAS,YAAYJ,IAAvB,CAArC,EAAmE;AAC/D,WAAO,IAAP;AACH;;AAEDG,EAAAA,UAAU,CAACI,WAAX,CAAuBH,SAAvB;AACA,SAAOD,UAAP;AACH;;AAEM,SAASK,aAAT,CAAuBT,IAAvB,EAA6B;AAChC,MAAI,EAAEA,IAAI,YAAYC,IAAlB,CAAJ,EAA6B;AACzB,WAAO,IAAP;AACH;;AAED,SAAOD,IAAI,CAACI,UAAZ;AACH;;AAEM,SAASM,WAAT,CAAqBN,UAArB,EAAiCO,OAAjC,EAA0CC,OAA1C,EAAmD;AACtD,MAAI,EAAER,UAAU,YAAYH,IAAxB,KAAiC,EAAEU,OAAO,YAAYV,IAArB,CAAjC,IAA+D,EAAEW,OAAO,YAAYX,IAArB,CAAnE,EAA+F;AAC3F,WAAO,IAAP;AACH;;AAEDG,EAAAA,UAAU,CAACS,YAAX,CAAwBF,OAAxB,EAAiCC,OAAjC;AACA,SAAOR,UAAP;AACH;;AAEM,SAASU,UAAT,CAAqBC,OAArB,EAA8B;AACjC,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAAR,IAAgB,EAA7B;AACA,MAAMC,KAAK,GAAGF,OAAO,CAACE,KAAR,IAAiB,EAA/B;;AAEA,MAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4B,QAAOC,KAAP,MAAiB,QAAjD,EAA2D;AACvD,WAAO,IAAP;AACH;;AAED,MAAIjB,IAAJ;;AACA,MAAIgB,IAAI,KAAK/B,oBAAb,EAAwB;AACpBe,IAAAA,IAAI,GAAGkB,QAAQ,CAACC,cAAT,CAAwBF,KAAK,CAACG,WAAN,IAAqB,EAA7C,CAAP;AACH,GAFD,MAEO;AACHpB,IAAAA,IAAI,GAAGkB,QAAQ,CAACG,aAAT,CAAuBL,IAAvB,CAAP;AAEAM,IAAAA,iBAAiB,CAACtB,IAAD,EAAOiB,KAAP,CAAjB;AACH;;AAED,SAAOjB,IAAP;AACH,EAED;;;AACA,SAASuB,UAAT,CAAoBC,CAApB,EAAuB;AACnB,SAAO,KAAKC,SAAL,CAAeD,CAAC,CAACR,IAAjB,EAAuBQ,CAAvB,CAAP;AACH;;AAED,IAAME,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAE,kBAAC3B,IAAD,EAAO4B,SAAP,EAAkBC,SAAlB,EAAgC;AACtC7B,IAAAA,IAAI,CAAC8B,gBAAL,CAAsBF,SAAtB,EAAiCL,UAAjC;AACAvB,IAAAA,IAAI,CAACyB,SAAL,GAAiBzB,IAAI,CAACyB,SAAL,IAAkB,EAAnC;AACAzB,IAAAA,IAAI,CAACyB,SAAL,CAAeG,SAAf,IAA4BC,SAA5B;AACH,GALoB;AAOrBE,EAAAA,UAAU,EAAE,oBAAC/B,IAAD,EAAO4B,SAAP,EAAqB;AAC7B5B,IAAAA,IAAI,CAACgC,mBAAL,CAAyBJ,SAAzB,EAAoCL,UAApC;AACH,GAToB;AAWrBU,EAAAA,KAAK,EAAE,eAACjC,IAAD,EAAOkC,KAAP,EAAiB;AACpB,QAAI,QAAOA,KAAP,MAAiB,QAArB,EAA+B;AAC3BA,MAAAA,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,GAAnB,CAAuB,UAAAC,GAAG;AAAA,yBAAOA,GAAP,eAAeJ,KAAK,CAACI,GAAD,CAApB;AAAA,OAA1B,EAAuDC,IAAvD,CAA4D,IAA5D,CAAR;AACH;;AAEDvC,IAAAA,IAAI,CAACwC,YAAL,CAAkB,OAAlB,EAA2BN,KAA3B;AACH,GAjBoB;AAmBrBO,EAAAA,SAAS,EAAE,mBAACzC,IAAD,EAAOkC,KAAP,EAAiB;AACxBlC,IAAAA,IAAI,CAACwC,YAAL,CAAkB,OAAlB,EAA2BN,KAA3B;AACH;AArBoB,CAAzB;;AAwBA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAAAC,QAAQ;AAAA,SAAIA,QAAQ,CAACC,UAAT,CAAoB,IAApB,CAAJ;AAAA,CAA3B;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAF,QAAQ;AAAA,SAAIA,QAAQ,KAAK,OAAjB;AAAA,CAAxB;;AACA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAAH,QAAQ;AAAA,SAAIA,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,KAAK,WAAzC;AAAA,CAAxB;;AACA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAAAJ,QAAQ;AAAA,SAAIA,QAAQ,KAAK,UAAjB;AAAA,CAA3B;;AACA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,IAAN;AAAA,SAAe,CAACf,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,GAArC,EAA0CC,IAA1C,CAAhB;AAAA,CAApB;;AAEO,SAAS5B,iBAAT,CAA2BtB,IAA3B,EAAiCiB,KAAjC,EAAwC;AAC3C,MAAI,EAAEjB,IAAI,YAAYsD,WAAlB,CAAJ,EAAoC;AAChC;AACH;;AAEDrC,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;;AACA,MAAI,QAAOA,KAAP,MAAiB,QAArB,EAA+B;AAC3B;AACH;;AAEDkB,EAAAA,MAAM,CAACC,IAAP,CAAYnB,KAAZ,EAAmBsC,OAAnB,CAA2B,UAACL,IAAD,EAAU;AACjC,QAAMhB,KAAK,GAAGjB,KAAK,CAACiC,IAAD,CAAnB;;AAEA,QAAIR,UAAU,CAACQ,IAAD,CAAd,EAAsB;AAClBxB,MAAAA,gBAAgB,CAACK,UAAjB,CAA4B/B,IAA5B,EAAkCkD,IAAI,CAACM,OAAL,CAAa,KAAb,EAAoB,EAApB,EAAwBC,WAAxB,EAAlC;AACA/B,MAAAA,gBAAgB,CAACC,QAAjB,CAA0B3B,IAA1B,EAAgCkD,IAAI,CAACM,OAAL,CAAa,KAAb,EAAoB,EAApB,EAAwBC,WAAxB,EAAhC,EAAuEvB,KAAvE;AACH,KAHD,MAGO,IAAIW,OAAO,CAACK,IAAD,CAAX,EAAmB;AACtBxB,MAAAA,gBAAgB,CAACO,KAAjB,CAAuBjC,IAAvB,EAA6BkC,KAA7B;AACH,KAFM,MAEA,IAAIY,OAAO,CAACI,IAAD,CAAX,EAAmB;AACtBxB,MAAAA,gBAAgB,CAACe,SAAjB,CAA2BzC,IAA3B,EAAiCkC,KAAjC;AACH,KAFM,MAEA,IAAI,CAACa,UAAU,CAACG,IAAD,CAAf,EAAuB;AAC1BlD,MAAAA,IAAI,CAACwC,YAAL,CAAkBU,IAAlB,EAAwBhB,KAAxB;AACH;AACJ,GAbD;AAcH;;AAEM,SAASwB,oBAAT,CAA+B1D,IAA/B,EAAqC2D,QAArC,EAA+CC,QAA/C,EAAyD;AAC5DD,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;;AAEA,MAAI5D,IAAI,YAAY6D,IAApB,EAA0B;AACtB7D,IAAAA,IAAI,CAACoB,WAAL,GAAmBuC,QAAQ,CAACvC,WAAT,IAAwB,EAA3C;AACA;AACH;;AAED,MAAI,EAAEpB,IAAI,YAAYsD,WAAlB,CAAJ,EAAoC;AAChC;AACH;;AAED,MAAI,QAAOK,QAAP,MAAoB,QAApB,IAAgC,QAAOC,QAAP,MAAoB,QAAxD,EAAkE;AAC9D;AACH;;AAED,MAAME,eAAe,GAAG,EAAxB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA5B,EAAAA,MAAM,CAACC,IAAP,CAAYwB,QAAZ,EACKI,MADL,CACY,UAAAd,IAAI;AAAA,WAAI,CAACH,UAAU,CAACG,IAAD,CAAX,IAAqBF,WAAW,CAACW,QAAD,EAAWT,IAAX,CAApC;AAAA,GADhB,EAEKK,OAFL,CAEa,UAACL,IAAD,EAAU;AACfY,IAAAA,eAAe,CAACZ,IAAD,CAAf,GAAwBU,QAAQ,CAACV,IAAD,CAAhC;AACH,GAJL;AAMAe,EAAAA,oBAAoB,CAACjE,IAAD,EAAO8D,eAAP,CAApB;AAEA3B,EAAAA,MAAM,CAACC,IAAP,CAAYuB,QAAZ,EACKK,MADL,CACY,UAAAd,IAAI;AAAA,WAAI,CAACH,UAAU,CAACG,IAAD,CAAf;AAAA,GADhB,EAEKK,OAFL,CAEa,UAACL,IAAD,EAAU;AACfa,IAAAA,YAAY,CAACb,IAAD,CAAZ,GAAqBS,QAAQ,CAACT,IAAD,CAA7B;AACH,GAJL;AAMA5B,EAAAA,iBAAiB,CAACtB,IAAD,EAAO+D,YAAP,CAAjB;AACH;;AAEM,SAASE,oBAAT,CAA8BjE,IAA9B,EAAoCiB,KAApC,EAA2C;AAC9C,MAAI,EAAEjB,IAAI,YAAYsD,WAAlB,CAAJ,EAAoC;AAChC;AACH;;AAED,MAAI,QAAOrC,KAAP,MAAiB,QAArB,EAA+B;AAC3B;AACH;;AAEDA,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEAkB,EAAAA,MAAM,CAACC,IAAP,CAAYnB,KAAZ,EAAmBsC,OAAnB,CAA2B,UAACL,IAAD,EAAU;AACjC,QAAIR,UAAU,CAACQ,IAAD,CAAd,EAAsB;AAClBxB,MAAAA,gBAAgB,CAACK,UAAjB,CAA4B/B,IAA5B,EAAkCkD,IAAI,CAACM,OAAL,CAAa,KAAb,EAAoB,EAApB,EAAwBC,WAAxB,EAAlC;AACH,KAFD,MAEO,IAAI,CAACV,UAAU,CAACG,IAAD,CAAf,EAAuB;AAC1BlD,MAAAA,IAAI,CAACkE,eAAL,CAAqBhB,IAArB;AACH;AACJ,GAND;AAOH;;;;;;;;;;ACrLD;;AACA;;;;;;;;AAUA,SAASiB,oBAAT,CAA8BpD,OAA9B,EAAuC;AAAA,MAC5BC,IAD4B,GACpBD,OADoB,CAC5BC,IAD4B;AAEnC,MAAMoD,eAAe,GAAG,OAAOpD,IAAP,KAAgB,QAAxC;AACA,MAAIqD,gBAAJ;;AAEA,MAAID,eAAJ,EAAqB;AACjBC,IAAAA,gBAAgB,GAAG,IAAIC,aAAJ,CAAkBvD,OAAlB,CAAnB;AACH,GAFD,MAEO;AACHsD,IAAAA,gBAAgB,GAAG,IAAIE,kBAAJ,CAAuBxD,OAAvB,CAAnB;AACH;;AAED,SAAOsD,gBAAP;AACH,EAED;;;IACME;;;AACF,8BAAYxD,OAAZ,EAAqB;AAAA;;AACjB,SAAKyD,cAAL,GAAsBzD,OAAtB;AACA,SAAK0D,cAAL,GAAsB,IAAtB;AACA,SAAKC,wBAAL,GAAgC,IAAhC;AACH;;;;kCAEa;AACV,aAAO,KAAKA,wBAAL,CAA8BC,WAA9B,EAAP;AACH;;;4BAEO;AACJ,UAAM5D,OAAO,GAAG,KAAKyD,cAArB;AADI,0BAEsCzD,OAFtC,CAEIC,IAFJ;AAAA,UAEIA,IAFJ,8BAEY,YAAM,CAAE,CAFpB;AAAA,2BAEsCD,OAFtC,CAEuBE,KAFvB;AAAA,UAEuBA,KAFvB,+BAE+B,EAF/B;AAIJ,UAAI2D,eAAJ;;AACA,UAAI9B,OAAO,CAAC9B,IAAD,CAAX,EAAmB;AACf,YAAMyD,cAAc,GAAG,IAAIzD,IAAJ,CAASC,KAAT,CAAvB;AACA,aAAKwD,cAAL,GAAsBA,cAAtB;AACAG,QAAAA,eAAe,GAAGH,cAAc,CAACI,MAAf,EAAlB;AACH,OAJD,MAIO;AACHD,QAAAA,eAAe,GAAG5D,IAAI,CAACC,KAAD,CAAtB;AACH;;AAED,UAAMyD,wBAAwB,GAAGP,oBAAoB,CAACS,eAAD,CAArD;AACA,WAAKF,wBAAL,GAAgCA,wBAAhC;;AAEA,UAAI,KAAKD,cAAT,EAAyB;AACrB,aAAKA,cAAL,CAAoBlF,qCAApB,IAAkDmF,wBAAlD;AACH;;AAED,UAAM1E,IAAI,GAAG0E,wBAAwB,CAACI,KAAzB,EAAb;;AACA,UAAI,KAAKL,cAAL,IAAuB,OAAO,KAAKA,cAAL,CAAoBM,iBAA3B,KAAiD,UAA5E,EAAwF;AACpF,aAAKN,cAAL,CAAoBM,iBAApB;AACH;;AAED,aAAO/E,IAAP;AACH;;;8BAES;AAAA,UACE0E,wBADF,GAC+B,IAD/B,CACEA,wBADF;AAENA,MAAAA,wBAAwB,CAACM,OAAzB;AACH;;;4BAEQjE,SAAS;AACd,UAAMkE,4BAA4B,GAAG,KAAKP,wBAA1C;AACA,UAAMQ,mBAAmB,GAAGD,4BAA4B,CAACT,cAAzD;AAFc,UAINxD,IAJM,GAIGD,OAJH,CAINC,IAJM;AAKd,UAAMmE,SAAS,GAAGpE,OAAO,CAACE,KAAR,IAAiB,EAAnC;;AAEA,UAAI,KAAKwD,cAAT,EAAyB;AACrB,aAAKA,cAAL,CAAoBxD,KAApB,GAA4BkE,SAA5B;AACH;;AAED,UAAIC,mBAAJ;;AACA,UAAItC,OAAO,CAAC9B,IAAD,CAAX,EAAmB;AACfoE,QAAAA,mBAAmB,GAAG,KAAKX,cAAL,CAAoBI,MAApB,EAAtB;AACH,OAFD,MAEO;AACHO,QAAAA,mBAAmB,GAAGpE,IAAI,CAACmE,SAAD,CAA1B;AACH;;AAED,UAAID,mBAAmB,CAAClE,IAApB,KAA6BoE,mBAAmB,CAACpE,IAArD,EAA2D;AACvDiE,QAAAA,4BAA4B,CAACI,OAA7B,CAAqCD,mBAArC;AACH,OApBa,CAsBd;;;AACA,UAAME,QAAQ,GAAGL,4BAA4B,CAACN,WAA7B,EAAjB;AACA,UAAMY,4BAA4B,GAAGpB,oBAAoB,CAACiB,mBAAD,CAAzD,CAxBc,CAyBd;;AACA,UAAMI,QAAQ,GAAGD,4BAA4B,CAACT,KAA7B,EAAjB;AAEA,UAAM1E,UAAU,GAAG,wBAAckF,QAAd,CAAnB;;AACA,UAAIlF,UAAJ,EAAgB;AACZ,8BAAYA,UAAZ,EAAwBoF,QAAxB,EAAkCF,QAAlC;AACH;AACJ;;;;;;IAGChB;;;AACF,yBAAYvD,OAAZ,EAAqB;AAAA;;AACjB,SAAKyD,cAAL,GAAsBzD,OAAtB;AACA,SAAK0E,gCAAL,GAAwC,EAAxC;AACA,SAAKzF,IAAL,GAAY,IAAZ;AACH;;;;kCAEa;AACV,aAAO,KAAKA,IAAZ;AACH;;;4BAEQ;AACL,UAAMe,OAAO,GAAG,KAAKyD,cAArB;AACA,UAAMvD,KAAK,GAAGF,OAAO,CAACE,KAAR,IAAiB,EAA/B;AAEA,UAAMjB,IAAI,GAAG,qBAAWe,OAAX,CAAb;AACA,WAAKf,IAAL,GAAYA,IAAZ;AAEA,UAAI0F,eAAe,GAAGzE,KAAK,CAAC0E,QAAN,IAAkB,EAAxC;;AACA,UAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,eAAd,CAAL,EAAqC;AACjCA,QAAAA,eAAe,GAAG,CAACA,eAAD,CAAlB;AACH;;AAED,UAAMD,gCAAgC,GAAGC,eAAe,CAACrD,GAAhB,CAAoB8B,oBAApB,CAAzC;AACA,UAAM2B,YAAY,GAAGL,gCAAgC,CAACpD,GAAjC,CAAqC,UAAA0D,KAAK;AAAA,eAAIA,KAAK,CAACjB,KAAN,EAAJ;AAAA,OAA1C,CAArB;AACA,WAAKW,gCAAL,GAAwCA,gCAAxC;AAEAK,MAAAA,YAAY,CAACvC,OAAb,CAAqB,UAAAyC,SAAS;AAAA,eAAI,qBAAWhG,IAAX,EAAiBgG,SAAjB,CAAJ;AAAA,OAA9B;AAEA,aAAOhG,IAAP;AACH;;;8BAEU;AACP,UAAMA,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMyF,gCAAgC,GAAG,KAAKA,gCAA9C;;AACA,UAAIA,gCAAJ,EAAsC;AAClCA,QAAAA,gCAAgC,CAAClC,OAAjC,CAAyC,UAAAwC,KAAK,EAAI;AAC9CA,UAAAA,KAAK,CAACf,OAAN;AAEA,cAAM3E,SAAS,GAAG0F,KAAK,CAACpB,WAAN,EAAlB;AACA,+BAAW3E,IAAX,EAAiBK,SAAjB;AACH,SALD;AAMH;AACJ;;;4BAEQU,SAAS;AACd,UAAMf,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMiG,SAAS,GAAG,KAAKzB,cAAL,CAAoBvD,KAAtC;AACA,UAAMkE,SAAS,GAAGpE,OAAO,CAACE,KAAR,IAAiB,EAAnC;AAEA,qCAAqBjB,IAArB,EAA2BmF,SAA3B,EAAsCc,SAAtC;AAEA,UAAMC,oCAAoC,GAAG,KAAKT,gCAAlD;AACA,UAAMU,oCAAoC,GAAG,EAA7C;AAEA,UAAMC,mBAAmB,GAAGH,SAAS,CAACN,QAAV,IAAsB,EAAlD;AACA,UAAMU,mBAAmB,GAAGlB,SAAS,CAACQ,QAAV,IAAsB,EAAlD;AAEA,UAAMW,cAAc,GAAG,EAAvB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,mBAAmB,CAACG,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,YAAMtB,4BAA4B,GAAGiB,oCAAoC,CAACK,CAAD,CAAzE;AACA,YAAME,WAAW,GAAGL,mBAAmB,CAACG,CAAD,CAAvC;AACA,YAAMG,WAAW,GAAGL,mBAAmB,CAACE,CAAD,CAAvC,CAHiD,CAKjD;;AACA,YAAI,CAACE,WAAL,EAAkB;AACd,cAAMlB,4BAA4B,GAAGpB,oBAAoB,CAACuC,WAAD,CAAzD;AACA,cAAMlB,QAAQ,GAAGD,4BAA4B,CAACT,KAA7B,EAAjB;AAEAqB,UAAAA,oCAAoC,CAACQ,IAArC,CAA0CpB,4BAA1C;AACAe,UAAAA,cAAc,CAACK,IAAf,CAAoB;AAAE3F,YAAAA,IAAI,EAAE9B,qBAAUC,GAAlB;AAAuBa,YAAAA,IAAI,EAAEwF;AAA7B,WAApB;AACA;AACH,SAbgD,CAejD;;;AACA,YAAMoB,SAAS,GAAGH,WAAW,CAACzF,IAAZ,KAAqB0F,WAAW,CAAC1F,IAAnD;;AACA,YAAI,CAAC4F,SAAL,EAAgB;AACZ,cAAMrB,6BAA4B,GAAGpB,oBAAoB,CAACuC,WAAD,CAAzD;;AACA,cAAMlB,SAAQ,GAAGD,6BAA4B,CAACT,KAA7B,EAAjB;;AAEA,cAAMQ,QAAQ,GAAGL,4BAA4B,CAACN,WAA7B,EAAjB;AAEAwB,UAAAA,oCAAoC,CAACQ,IAArC,CAA0CpB,6BAA1C;AAEAe,UAAAA,cAAc,CAACK,IAAf,CAAoB;AAAE3F,YAAAA,IAAI,EAAE9B,qBAAUG,OAAlB;AAA2BiG,YAAAA,QAAQ,EAARA,QAA3B;AAAqCE,YAAAA,QAAQ,EAARA;AAArC,WAApB;AACA;AACH,SA3BgD,CA6BjD;;;AACAP,QAAAA,4BAA4B,CAACI,OAA7B,CAAqCqB,WAArC;AACAP,QAAAA,oCAAoC,CAACQ,IAArC,CAA0C1B,4BAA1C;AACH,OA/Ca,CAiDd;;;AACA,WAAK,IAAIsB,EAAC,GAAGF,mBAAmB,CAACG,MAAjC,EAAyCD,EAAC,GAAGH,mBAAmB,CAACI,MAAjE,EAAyED,EAAC,EAA1E,EAA8E;AAC1E,YAAMtB,6BAA4B,GAAGiB,oCAAoC,CAACK,EAAD,CAAzE;;AACAtB,QAAAA,6BAA4B,CAACD,OAA7B;;AAEA,YAAMM,SAAQ,GAAGL,6BAA4B,CAACN,WAA7B,EAAjB;;AACA2B,QAAAA,cAAc,CAACK,IAAf,CAAoB;AAAE3F,UAAAA,IAAI,EAAE9B,qBAAUE,MAAlB;AAA0BY,UAAAA,IAAI,EAAEsF;AAAhC,SAApB;AACH,OAxDa,CA0Dd;;;AACA,aAAOgB,cAAc,CAACE,MAAf,GAAwB,CAA/B,EAAkC;AAC9B,YAAMK,SAAS,GAAGP,cAAc,CAACQ,KAAf,EAAlB;;AAEA,YAAID,SAAS,CAAC7F,IAAV,KAAmB9B,qBAAUC,GAAjC,EAAsC;AAClC,+BAAWa,IAAX,EAAiB6G,SAAS,CAAC7G,IAA3B;AACH,SAFD,MAEO,IAAI6G,SAAS,CAAC7F,IAAV,KAAmB9B,qBAAUE,MAAjC,EAAyC;AAC5C,+BAAWY,IAAX,EAAiB6G,SAAS,CAAC7G,IAA3B;AACH,SAFM,MAEA,IAAI6G,SAAS,CAAC7F,IAAV,KAAmB9B,qBAAUG,OAAjC,EAA0C;AAC7C,gCAAYW,IAAZ,EAAkB6G,SAAS,CAACrB,QAA5B,EAAsCqB,SAAS,CAACvB,QAAhD;AACH;AACJ;;AACD,WAAKG,gCAAL,GAAwCU,oCAAxC;AACH;;;;;;AAGL,SAASY,UAAT,CAAoBC,aAApB,EAAmC;AAC/B,MAAMC,cAAc,GAAG,4BAAkBD,aAAlB,CAAvB;;AAEA,MAAIC,cAAJ,EAAoB;AAChB,QAAMC,oBAAoB,GAAGD,cAAc,CAACzH,4BAAD,CAA3C;;AAEA,QAAI0H,oBAAJ,EAA0B;AACtBA,MAAAA,oBAAoB,CAAClC,OAArB;AACA,UAAMmC,QAAQ,GAAGD,oBAAoB,CAACvC,WAArB,EAAjB;AAEA,2BAAWqC,aAAX,EAA0BG,QAA1B;AACH;AACJ;AACJ;;AAEM,SAAStC,MAAT,CAAgB9D,OAAhB,EAAyBiG,aAAzB,EAAwC;AAC3C,MAAMC,cAAc,GAAG,4BAAkBD,aAAlB,CAAvB;;AACA,MAAIC,cAAJ,EAAoB;AAChB,QAAMG,oBAAoB,GAAGH,cAAc,CAACzH,4BAAD,CAA3C;;AACA,QAAI4H,oBAAJ,EAA0B;AACtB,UAAMX,WAAW,GAAGW,oBAAoB,CAAC5C,cAAzC;;AAEA,UAAIiC,WAAW,CAACzF,IAAZ,KAAqBD,OAAO,CAACC,IAAjC,EAAuC;AACnCoG,QAAAA,oBAAoB,CAAC/B,OAArB,CAA6BtE,OAA7B;AACA;AACH;AACJ;;AAEDgG,IAAAA,UAAU,CAACC,aAAD,CAAV;AACH;;AAED,MAAM3C,gBAAgB,GAAGF,oBAAoB,CAACpD,OAAD,CAA7C;AACA,MAAMf,IAAI,GAAGqE,gBAAgB,CAACS,KAAjB,EAAb;AAEA9E,EAAAA,IAAI,CAACR,4BAAD,CAAJ,GAA0B6E,gBAA1B;AACA,uBAAW2C,aAAX,EAA0BhH,IAA1B;AACH;;AAED,SAAS8C,OAAT,CAAiB9B,IAAjB,EAAuB;AACnB,SAAOA,IAAI,CAACqG,gBAAZ;AACH;;IAEYC;;;AACT,qBAAYrG,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;AACH;;;;6BAESsG,OAAO;AACb,UAAMC,SAAS,GAAGrF,MAAM,CAACsF,MAAP,CAAc,EAAd,EAAkBF,KAAlB,CAAlB;AACA,UAAM7C,wBAAwB,GAAG,KAAKnF,qCAAL,CAAjC;AAEA,WAAKgI,KAAL,GAAaC,SAAb;AACA,UAAMpC,mBAAmB,GAAG,KAAKP,MAAL,EAA5B;;AAEA,UAAIH,wBAAJ,EAA8B;AAC1BA,QAAAA,wBAAwB,CAACW,OAAzB,CAAiCD,mBAAjC;AACH;AACJ;;;wCAEoB,CACjB;AACH;;;6BAES,CACN;AACH;;;;;;;AAGLkC,SAAS,CAACD,gBAAV,GAA6B,IAA7B;;;;;;;;;ACnSA;;;;;;;;;;AAEO,SAASK,CAAT,CAAW1G,IAAX,EAAiBC,KAAjB,EAAqC;AAAA;;AAAA,oCAAV0E,QAAU;AAAVA,IAAAA,QAAU;AAAA;;AACxC1E,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA0E,EAAAA,QAAQ,GAAG,YAAGgC,MAAH,gCAAahC,QAAb,GACN3B,MADM,CACC,UAAA+B,KAAK;AAAA,WAAIA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,SAAvC;AAAA,GADN,EAEN1D,GAFM,CAEF,UAAA0D,KAAK;AAAA,WAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4B6B,MAAM,CAAC7B,KAAD,CAAlC,GAA4CA,KAAjD;AAAA,GAFH,EAGN1D,GAHM,CAGF,UAAA0D,KAAK;AAAA,WAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4B2B,CAAC,CAACzI,oBAAD,EAAY;AAAEmC,MAAAA,WAAW,EAAE2E;AAAf,KAAZ,CAA7B,GAAmEA,KAAxE;AAAA,GAHH,CAAX;AAKA9E,EAAAA,KAAK,CAAC0E,QAAN,GAAiBA,QAAjB;AAEA,SAAO;AAAE3E,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA;AAAR,GAAP;AACH;;;;ACbD;;AACA;;;;;;;;;;;;;;;;;;;;IAEM4G;;;;;AACF,eAAa5G,KAAb,EAAoB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AAEA,UAAKsG,KAAL,GAAa;AACTO,MAAAA,KAAK,EAAE;AADE,KAAb;AAHgB;AAMnB;;;;6BAEQ;AAAA;;AACL,UAAMP,KAAK,GAAG,KAAKA,KAAnB;AACA,aACI;AAAK,QAAA,OAAO,EAAE,mBAAM;AAChB,UAAA,MAAI,CAACQ,QAAL,CAAc;AACVD,YAAAA,KAAK,EAAE,EAAEP,KAAK,CAACO;AADL,WAAd;AAGH;AAJD,SAIIP,KAAK,CAACO,KAJV,CADJ;AAOH;;;;EAlBaR;;AAqBlB,kBAAO,UAAC,GAAD,OAAP,EAAepG,QAAQ,CAAC8G,cAAT,CAAwB,UAAxB,CAAf","file":"diff-demo.7878b09c.map","sourceRoot":"../demo","sourcesContent":["/**\n * @Author: huangw1\n * @Date: 2019-11-20 17:11\n */\n\n// 前缀\nconst prefix = '@react/__';\n\n// 通用常量\nexport const TEXT_NODE = `${prefix}text_node`;\n\n// diff 类型\nexport const OPERATION = {\n    ADD: `${prefix}operation_add`,\n    REMOVE: `${prefix}operation_remove`,\n    REPLACE: `${prefix}operation_replace`,\n    UPDATE: `${prefix}_operation_update`,\n};\n\n// diff 中常量\nexport const RENDERED_INTERNAL_INSTANCE = `${prefix}rendered_internal_instance`;\n\nexport const INTERNAL_INSTANCE = `${prefix}internal_instance`;\n\n// fiber中的常量\nexport const HOST_COMPONENT = `${prefix}host_component`;\n\nexport const COMPOSITE_COMPONENT = `${prefix}composite_component`;\n\nexport const HOST_ROOT = `${prefix}host_root`;\n\nexport const ENOUGH_TIME = 1;\n\nexport const ROOT_FIBER = `${prefix}root_fiber`;\n\nexport const INSTANCE_INNER_FIBER = `${prefix}instance_inner_fiber`;\n","/**\n * @Author: huangw1\n * @Date: 2019-11-20 17:43\n */\nimport {TEXT_NODE} from \"../constants\";\n\nexport function getFirstChildNode(node) {\n    if (!(node instanceof Node)) {\n        return null;\n    }\n\n    return node.firstChild\n}\n\nexport function removeNode(parentNode, childNode) {\n    if (!(parentNode instanceof Node) || !(childNode instanceof Node)) {\n        return null;\n    }\n\n    parentNode.removeChild(childNode);\n    return parentNode;\n}\n\nexport function appendNode(parentNode, childNode) {\n    if (!(parentNode instanceof Node) || !(childNode instanceof Node)) {\n        return null;\n    }\n\n    parentNode.appendChild(childNode);\n    return parentNode;\n}\n\nexport function getParentNode(node) {\n    if (!(node instanceof Node)) {\n        return null;\n    }\n\n    return node.parentNode;\n}\n\nexport function replaceNode(parentNode, newNode, oldNode) {\n    if (!(parentNode instanceof Node) || !(newNode instanceof Node) || !(oldNode instanceof Node)) {\n        return null;\n    }\n\n    parentNode.replaceChild(newNode, oldNode);\n    return parentNode;\n}\n\nexport function createNode (element) {\n    const type = element.type || '';\n    const props = element.props || {};\n\n    if (typeof type !== 'string' || typeof props !== 'object') {\n        return null;\n    }\n\n    let node;\n    if (type === TEXT_NODE) {\n        node = document.createTextNode(props.textContent || '');\n    } else {\n        node = document.createElement(type);\n\n        setNodeAttributes(node, props);\n    }\n\n    return node;\n}\n\n// 事件代理 - 方便进行事件绑定和取消绑定\nfunction eventProxy(e) {\n    return this._listener[e.type](e);\n}\n\nconst attributeHandler = {\n    listener: (node, eventName, eventFunc) => {\n        node.addEventListener(eventName, eventProxy);\n        node._listener = node._listener || {};\n        node._listener[eventName] = eventFunc;\n    },\n\n    unlistener: (node, eventName) => {\n        node.removeEventListener(eventName, eventProxy);\n    },\n\n    style: (node, value) => {\n        if (typeof value === 'object') {\n            value = Object.keys(value).map(key => `${key}: ${value[key]}`).join(', ');\n        }\n\n        node.setAttribute('style', value);\n    },\n\n    className: (node, value) => {\n        node.setAttribute('class', value);\n    },\n};\n\nconst isListener = propName => propName.startsWith('on');\nconst isStyle = propName => propName === 'style';\nconst isClass = propName => propName === 'class' || propName === 'className';\nconst isChildren = propName => propName === 'children';\nconst hasProperty = (obj, prop) => !Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function setNodeAttributes(node, props) {\n    if (!(node instanceof HTMLElement)) {\n        return;\n    }\n\n    props = props || {};\n    if (typeof props !== 'object') {\n        return;\n    }\n\n    Object.keys(props).forEach((prop) => {\n        const value = props[prop];\n\n        if (isListener(prop)) {\n            attributeHandler.unlistener(node, prop.replace(/^on/, '').toLowerCase());\n            attributeHandler.listener(node, prop.replace(/^on/, '').toLowerCase(), value);\n        } else if (isStyle(prop)) {\n            attributeHandler.style(node, value);\n        } else if (isClass(prop)) {\n            attributeHandler.className(node, value);\n        } else if (!isChildren(prop)) {\n            node.setAttribute(prop, value);\n        }\n    });\n}\n\nexport function updateNodeAttributes (node, newProps, oldProps) {\n    newProps = newProps || {};\n    oldProps = oldProps || {};\n\n    if (node instanceof Text) {\n        node.textContent = newProps.textContent || '';\n        return;\n    }\n\n    if (!(node instanceof HTMLElement)) {\n        return;\n    }\n\n    if (typeof newProps !== 'object' || typeof oldProps !== 'object') {\n        return;\n    }\n\n    const willRemoveProps = {};\n    const willSetProps = {};\n\n    Object.keys(oldProps)\n        .filter(prop => !isChildren(prop) && hasProperty(newProps, prop))\n        .forEach((prop) => {\n            willRemoveProps[prop] = oldProps[prop];\n        });\n\n    removeNodeAttributes(node, willRemoveProps);\n\n    Object.keys(newProps)\n        .filter(prop => !isChildren(prop))\n        .forEach((prop) => {\n            willSetProps[prop] = newProps[prop];\n        });\n\n    setNodeAttributes(node, willSetProps);\n}\n\nexport function removeNodeAttributes(node, props) {\n    if (!(node instanceof HTMLElement)) {\n        return;\n    }\n\n    if (typeof props !== 'object') {\n        return;\n    }\n\n    props = props || {};\n\n    Object.keys(props).forEach((prop) => {\n        if (isListener(prop)) {\n            attributeHandler.unlistener(node, prop.replace(/^on/, '').toLowerCase());\n        } else if (!isChildren(prop)) {\n            node.removeAttribute(prop);\n        }\n    });\n}\n","/**\n * @Author: huangw1\n * @Date: 2019-11-20 17:45\n */\nimport {INTERNAL_INSTANCE, OPERATION, RENDERED_INTERNAL_INSTANCE} from \"../constants\";\nimport {\n    appendNode,\n    createNode,\n    getFirstChildNode,\n    getParentNode,\n    removeNode,\n    replaceNode,\n    updateNodeAttributes\n} from \"../render/dom\";\n\nfunction instantiateComponent(element) {\n    const {type} = element;\n    const isHostComponent = typeof type === 'string';\n    let internalInstance;\n\n    if (isHostComponent) {\n        internalInstance = new HostComponent(element);\n    } else {\n        internalInstance = new CompositeComponent(element);\n    }\n\n    return internalInstance;\n}\n\n// 管理组件\nclass CompositeComponent {\n    constructor(element) {\n        this.currentElement = element;\n        this.publicInstance = null;\n        this.renderedInternalInstance = null;\n    }\n\n    getHostNode() {\n        return this.renderedInternalInstance.getHostNode();\n    }\n\n    mount() {\n        const element = this.currentElement;\n        const { type = (() => {}), props = {} } = element;\n\n        let renderedElement;\n        if (isClass(type)) {\n            const publicInstance = new type(props);\n            this.publicInstance = publicInstance;\n            renderedElement = publicInstance.render();\n        } else {\n            renderedElement = type(props);\n        }\n\n        const renderedInternalInstance = instantiateComponent(renderedElement);\n        this.renderedInternalInstance = renderedInternalInstance;\n\n        if (this.publicInstance) {\n            this.publicInstance[RENDERED_INTERNAL_INSTANCE] = renderedInternalInstance;\n        }\n\n        const node = renderedInternalInstance.mount();\n        if (this.publicInstance && typeof this.publicInstance.componentDidMount === 'function') {\n            this.publicInstance.componentDidMount();\n        }\n\n        return node;\n    }\n\n    unmount() {\n        const { renderedInternalInstance } = this;\n        renderedInternalInstance.unmount();\n    }\n\n    receive (element) {\n        const prevRenderedInternalInstance = this.renderedInternalInstance;\n        const prevRenderedElement = prevRenderedInternalInstance.currentElement;\n\n        const { type } = element;\n        const nextProps = element.props || {};\n\n        if (this.publicInstance) {\n            this.publicInstance.props = nextProps;\n        }\n\n        let nextRenderedElement;\n        if (isClass(type)) {\n            nextRenderedElement = this.publicInstance.render();\n        } else {\n            nextRenderedElement = type(nextProps);\n        }\n\n        if (prevRenderedElement.type === nextRenderedElement.type) {\n            prevRenderedInternalInstance.receive(nextRenderedElement);\n        }\n\n        // 直接替换\n        const prevNode = prevRenderedInternalInstance.getHostNode();\n        const nextRenderedInternalInstance = instantiateComponent(nextRenderedElement);\n        // const nextNode = nextRenderedInternalInstance.getHostNode()\n        const nextNode = nextRenderedInternalInstance.mount();\n\n        const parentNode = getParentNode(prevNode);\n        if (parentNode) {\n            replaceNode(parentNode, nextNode, prevNode);\n        }\n    }\n}\n\nclass HostComponent {\n    constructor(element) {\n        this.currentElement = element;\n        this.renderedInternalInstanceChildren = [];\n        this.node = null;\n    }\n\n    getHostNode() {\n        return this.node;\n    }\n\n    mount () {\n        const element = this.currentElement;\n        const props = element.props || {};\n\n        const node = createNode(element);\n        this.node = node;\n\n        let elementChildren = props.children || [];\n        if (!Array.isArray(elementChildren)) {\n            elementChildren = [elementChildren];\n        }\n\n        const renderedInternalInstanceChildren = elementChildren.map(instantiateComponent);\n        const nodeChildren = renderedInternalInstanceChildren.map(child => child.mount());\n        this.renderedInternalInstanceChildren = renderedInternalInstanceChildren;\n\n        nodeChildren.forEach(nodeChild => appendNode(node, nodeChild));\n\n        return node;\n    }\n\n    unmount () {\n        const node = this.node;\n        const renderedInternalInstanceChildren = this.renderedInternalInstanceChildren;\n        if (renderedInternalInstanceChildren) {\n            renderedInternalInstanceChildren.forEach(child => {\n                child.unmount();\n\n                const childNode = child.getHostNode();\n                removeNode(node, childNode);\n            })\n        }\n    }\n\n    receive (element) {\n        const node = this.node;\n        const prevProps = this.currentElement.props;\n        const nextProps = element.props || {};\n\n        updateNodeAttributes(node, nextProps, prevProps);\n\n        const prevRenderedInternalInstanceChildren = this.renderedInternalInstanceChildren;\n        const nextRenderedInternalInstanceChildren = [];\n\n        const prevElementChildren = prevProps.children || [];\n        const nextElementChildren = nextProps.children || [];\n\n        const operationQueue = [];\n\n        for (let i = 0; i < nextElementChildren.length; i++) {\n            const prevRenderedInternalInstance = prevRenderedInternalInstanceChildren[i];\n            const prevElement = prevElementChildren[i];\n            const nextElement = nextElementChildren[i];\n\n            // 新增\n            if (!prevElement) {\n                const nextRenderedInternalInstance = instantiateComponent(nextElement);\n                const nextNode = nextRenderedInternalInstance.mount();\n\n                nextRenderedInternalInstanceChildren.push(nextRenderedInternalInstance);\n                operationQueue.push({ type: OPERATION.ADD, node: nextNode });\n                continue;\n            }\n\n            // 替换\n            const canUpdate = prevElement.type === nextElement.type;\n            if (!canUpdate) {\n                const nextRenderedInternalInstance = instantiateComponent(nextElement);\n                const nextNode = nextRenderedInternalInstance.mount();\n\n                const prevNode = prevRenderedInternalInstance.getHostNode();\n\n                nextRenderedInternalInstanceChildren.push(nextRenderedInternalInstance);\n\n                operationQueue.push({ type: OPERATION.REPLACE, prevNode, nextNode });\n                continue;\n            }\n\n            // 更新\n            prevRenderedInternalInstance.receive(nextElement);\n            nextRenderedInternalInstanceChildren.push(prevRenderedInternalInstance);\n        }\n\n        // 删除\n        for (let i = nextElementChildren.length; i < prevElementChildren.length; i++) {\n            const prevRenderedInternalInstance = prevRenderedInternalInstanceChildren[i];\n            prevRenderedInternalInstance.unmount();\n\n            const prevNode = prevRenderedInternalInstance.getHostNode();\n            operationQueue.push({ type: OPERATION.REMOVE, node: prevNode });\n        }\n\n        // 执行各操作\n        while (operationQueue.length > 0) {\n            const operation = operationQueue.shift();\n\n            if (operation.type === OPERATION.ADD) {\n                appendNode(node, operation.node);\n            } else if (operation.type === OPERATION.REMOVE) {\n                removeNode(node, operation.node);\n            } else if (operation.type === OPERATION.REPLACE) {\n                replaceNode(node, operation.nextNode, operation.prevNode);\n            }\n        }\n        this.renderedInternalInstanceChildren = nextRenderedInternalInstanceChildren;\n    }\n}\n\nfunction unmountAll(containerNode) {\n    const firstChildNode = getFirstChildNode(containerNode);\n\n    if (firstChildNode) {\n        const rootInternalInstance = firstChildNode[INTERNAL_INSTANCE];\n\n        if (rootInternalInstance) {\n            rootInternalInstance.unmount();\n            const rootNode = rootInternalInstance.getHostNode();\n\n            removeNode(containerNode, rootNode);\n        }\n    }\n}\n\nexport function render(element, containerNode) {\n    const firstChildNode = getFirstChildNode(containerNode)\n    if (firstChildNode) {\n        const prevInternalInstance = firstChildNode[INTERNAL_INSTANCE];\n        if (prevInternalInstance) {\n            const prevElement = prevInternalInstance.currentElement;\n\n            if (prevElement.type === element.type) {\n                prevInternalInstance.receive(element);\n                return;\n            }\n        }\n\n        unmountAll(containerNode)\n    }\n\n    const internalInstance = instantiateComponent(element);\n    const node = internalInstance.mount();\n\n    node[INTERNAL_INSTANCE] = internalInstance;\n    appendNode(containerNode, node);\n}\n\nfunction isClass(type) {\n    return type.isReactComponent;\n}\n\nexport class Component {\n    constructor(props) {\n        this.props = props\n    }\n\n    setState (state) {\n        const nextState = Object.assign({}, state);\n        const renderedInternalInstance = this[RENDERED_INTERNAL_INSTANCE];\n\n        this.state = nextState;\n        const nextRenderedElement = this.render();\n\n        if (renderedInternalInstance) {\n            renderedInternalInstance.receive(nextRenderedElement);\n        }\n    }\n\n    componentDidMount () {\n        // override\n    }\n\n    render () {\n        // override\n    }\n}\n\nComponent.isReactComponent = true;\n","/**\n * @Author: huangw1\n * @Date: 2019-11-20 17:15\n */\n\nimport {TEXT_NODE} from \"./constants\";\n\nexport function h(type, props, ...children) {\n    props = props || {};\n\n    children = [].concat(...children)\n        .filter(child => child !== null && typeof child !== 'boolean')\n        .map(child => (typeof child === 'number' ? String(child) : child))\n        .map(child => (typeof child === 'string' ? h(TEXT_NODE, { textContent: child }) : child));\n\n    props.children = children;\n\n    return { type, props };\n}\n","/**\n * @Author: huangw1\n * @Date: 2019-11-21 10:39\n */\n\nimport {Component, render} from \"../src/reconciler/diff\";\nimport {h} from \"../src/h\";\n\nclass App extends Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            count: 0\n        }\n    }\n\n    render() {\n        const state = this.state;\n        return (\n            <div onClick={() => {\n                this.setState({\n                    count: ++state.count\n                })\n            }}>{state.count}</div>\n        )\n    }\n}\n\nrender(<App/>, document.getElementById('diff-app'));\n"]}