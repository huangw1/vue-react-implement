{"version":3,"sources":["../src/constants.js","../src/render/dom.js","../src/reconciler/fiber.js","../src/h.js","fiber-demo.js"],"names":["prefix","TEXT_NODE","OPERATION","ADD","REMOVE","REPLACE","UPDATE","RENDERED_INTERNAL_INSTANCE","INTERNAL_INSTANCE","HOST_COMPONENT","COMPOSITE_COMPONENT","HOST_ROOT","ENOUGH_TIME","ROOT_FIBER","INSTANCE_INNER_FIBER","getFirstChildNode","node","Node","firstChild","removeNode","parentNode","childNode","removeChild","appendNode","appendChild","getParentNode","replaceNode","newNode","oldNode","replaceChild","createNode","element","type","props","document","createTextNode","textContent","createElement","setNodeAttributes","eventProxy","e","_listener","attributeHandler","listener","eventName","eventFunc","addEventListener","unlistener","removeEventListener","style","value","Object","keys","map","key","join","setAttribute","className","isListener","propName","startsWith","isStyle","isClass","isChildren","hasProperty","obj","prop","prototype","hasOwnProperty","call","HTMLElement","forEach","replace","toLowerCase","updateNodeAttributes","newProps","oldProps","Text","willRemoveProps","willSetProps","filter","removeNodeAttributes","removeAttribute","taskQueue","nextUnitWork","pendingCommit","global","func","timeRemaining","render","elements","containerDom","push","tag","dom","children","requestIdleCallback","performWork","scheduleUpdate","instance","partialState","deadline","workLoop","length","resetNextUnitWork","performUnitWork","commitAllWork","task","shift","undefined","statNode","alternate","currentFiber","getRootFiber","fiber","parent","oldRootFiber","beginWork","child","completeWork","sibling","workInCompositeComponent","workInHostComponent","childEffects","effects","parentEffects","rootFiber","i","parentNodeFiber","upwardUtilNodeFiber","nodeFiber","downwardUtilNodeFiber","effectTag","prevNodeFiber","fiberInstance","isReactComponent","isFirstCreate","componentDidMount","cloneChildrenFiber","isClassComponent","state","assign","childrenElements","reconcileChildren","Array","isArray","oldChildFiber","newChildFiber","index","prevFiber","parentFiber","oldFiber","newFiber","Component","nextState","h","concat","String","App","count","setState","getElementById"],"mappings":"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","file":"fiber-demo.167446f8.map","sourceRoot":"../demo","sourcesContent":["/**\n * @Author: huangw1\n * @Date: 2019-11-20 17:11\n */\n\n// 前缀\nconst prefix = '@react/__';\n\n// 通用常量\nexport const TEXT_NODE = `${prefix}text_node`;\n\n// diff 类型\nexport const OPERATION = {\n    ADD: `${prefix}operation_add`,\n    REMOVE: `${prefix}operation_remove`,\n    REPLACE: `${prefix}operation_replace`,\n    UPDATE: `${prefix}_operation_update`,\n};\n\n// diff 中常量\nexport const RENDERED_INTERNAL_INSTANCE = `${prefix}rendered_internal_instance`;\n\nexport const INTERNAL_INSTANCE = `${prefix}internal_instance`;\n\n// fiber中的常量\nexport const HOST_COMPONENT = `${prefix}host_component`;\n\nexport const COMPOSITE_COMPONENT = `${prefix}composite_component`;\n\nexport const HOST_ROOT = `${prefix}host_root`;\n\nexport const ENOUGH_TIME = 1;\n\nexport const ROOT_FIBER = `${prefix}root_fiber`;\n\nexport const INSTANCE_INNER_FIBER = `${prefix}instance_inner_fiber`;\n","/**\n * @Author: huangw1\n * @Date: 2019-11-20 17:43\n */\nimport {TEXT_NODE} from \"../constants\";\n\nexport function getFirstChildNode(node) {\n    if (!(node instanceof Node)) {\n        return null;\n    }\n\n    return node.firstChild\n}\n\nexport function removeNode(parentNode, childNode) {\n    if (!(parentNode instanceof Node) || !(childNode instanceof Node)) {\n        return null;\n    }\n\n    parentNode.removeChild(childNode);\n    return parentNode;\n}\n\nexport function appendNode(parentNode, childNode) {\n    if (!(parentNode instanceof Node) || !(childNode instanceof Node)) {\n        return null;\n    }\n\n    parentNode.appendChild(childNode);\n    return parentNode;\n}\n\nexport function getParentNode(node) {\n    if (!(node instanceof Node)) {\n        return null;\n    }\n\n    return node.parentNode;\n}\n\nexport function replaceNode(parentNode, newNode, oldNode) {\n    if (!(parentNode instanceof Node) || !(newNode instanceof Node) || !(oldNode instanceof Node)) {\n        return null;\n    }\n\n    parentNode.replaceChild(newNode, oldNode);\n    return parentNode;\n}\n\nexport function createNode (element) {\n    const type = element.type || '';\n    const props = element.props || {};\n\n    if (typeof type !== 'string' || typeof props !== 'object') {\n        return null;\n    }\n\n    let node;\n    if (type === TEXT_NODE) {\n        node = document.createTextNode(props.textContent || '');\n    } else {\n        node = document.createElement(type);\n\n        setNodeAttributes(node, props);\n    }\n\n    return node;\n}\n\n// 事件代理 - 方便进行事件绑定和取消绑定\nfunction eventProxy(e) {\n    return this._listener[e.type](e);\n}\n\nconst attributeHandler = {\n    listener: (node, eventName, eventFunc) => {\n        node.addEventListener(eventName, eventProxy);\n        node._listener = node._listener || {};\n        node._listener[eventName] = eventFunc;\n    },\n\n    unlistener: (node, eventName) => {\n        node.removeEventListener(eventName, eventProxy);\n    },\n\n    style: (node, value) => {\n        if (typeof value === 'object') {\n            value = Object.keys(value).map(key => `${key}: ${value[key]}`).join(', ');\n        }\n\n        node.setAttribute('style', value);\n    },\n\n    className: (node, value) => {\n        node.setAttribute('class', value);\n    },\n};\n\nconst isListener = propName => propName.startsWith('on');\nconst isStyle = propName => propName === 'style';\nconst isClass = propName => propName === 'class' || propName === 'className';\nconst isChildren = propName => propName === 'children';\nconst hasProperty = (obj, prop) => !Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function setNodeAttributes(node, props) {\n    if (!(node instanceof HTMLElement)) {\n        return;\n    }\n\n    props = props || {};\n    if (typeof props !== 'object') {\n        return;\n    }\n\n    Object.keys(props).forEach((prop) => {\n        const value = props[prop];\n\n        if (isListener(prop)) {\n            attributeHandler.unlistener(node, prop.replace(/^on/, '').toLowerCase());\n            attributeHandler.listener(node, prop.replace(/^on/, '').toLowerCase(), value);\n        } else if (isStyle(prop)) {\n            attributeHandler.style(node, value);\n        } else if (isClass(prop)) {\n            attributeHandler.className(node, value);\n        } else if (!isChildren(prop)) {\n            node.setAttribute(prop, value);\n        }\n    });\n}\n\nexport function updateNodeAttributes (node, newProps, oldProps) {\n    newProps = newProps || {};\n    oldProps = oldProps || {};\n\n    if (node instanceof Text) {\n        node.textContent = newProps.textContent || '';\n        return;\n    }\n\n    if (!(node instanceof HTMLElement)) {\n        return;\n    }\n\n    if (typeof newProps !== 'object' || typeof oldProps !== 'object') {\n        return;\n    }\n\n    const willRemoveProps = {};\n    const willSetProps = {};\n\n    Object.keys(oldProps)\n        .filter(prop => !isChildren(prop) && hasProperty(newProps, prop))\n        .forEach((prop) => {\n            willRemoveProps[prop] = oldProps[prop];\n        });\n\n    removeNodeAttributes(node, willRemoveProps);\n\n    Object.keys(newProps)\n        .filter(prop => !isChildren(prop))\n        .forEach((prop) => {\n            willSetProps[prop] = newProps[prop];\n        });\n\n    setNodeAttributes(node, willSetProps);\n}\n\nexport function removeNodeAttributes(node, props) {\n    if (!(node instanceof HTMLElement)) {\n        return;\n    }\n\n    if (typeof props !== 'object') {\n        return;\n    }\n\n    props = props || {};\n\n    Object.keys(props).forEach((prop) => {\n        if (isListener(prop)) {\n            attributeHandler.unlistener(node, prop.replace(/^on/, '').toLowerCase());\n        } else if (!isChildren(prop)) {\n            node.removeAttribute(prop);\n        }\n    });\n}\n","/**\n * @Author: huangw1\n * @Date: 2019-11-21 11:13\n */\n\nimport {\n    COMPOSITE_COMPONENT,\n    ENOUGH_TIME,\n    HOST_COMPONENT,\n    HOST_ROOT,\n    INSTANCE_INNER_FIBER, OPERATION,\n    ROOT_FIBER\n} from \"../constants\";\nimport {appendNode, createNode, removeNode, replaceNode, updateNodeAttributes} from \"../render/dom\";\n\n// 任务队列\nlet taskQueue = [];\n\n// 下一个需要操作的 fiber\nlet nextUnitWork = null;\n\n// 所有操作完成后，会将该值赋值为跟节点\nlet pendingCommit = null;\n\nif (!global['requestIdleCallback']) {\n    global['requestIdleCallback'] = (func) => func({\n        timeRemaining () {\n            return 100\n        }\n    });\n}\n\nexport function render(elements, containerDom) {\n    taskQueue.push({\n        tag  : HOST_ROOT,\n        dom  : containerDom,\n        props: {\n            children: elements\n        }\n    });\n\n    requestIdleCallback(performWork);\n}\n\n// 更新函数\nexport function scheduleUpdate(instance, partialState) {\n    taskQueue.push({\n        tag  : HOST_COMPONENT,\n        instance,\n        partialState,\n        props: instance.props\n    });\n\n    requestIdleCallback(performWork);\n}\n\nfunction performWork(deadline) {\n    workLoop(deadline);\n\n    if (taskQueue.length || nextUnitWork !== null) {\n        requestIdleCallback(performWork);\n    }\n}\n\nfunction workLoop(deadline) {\n    if (nextUnitWork === null) {\n        nextUnitWork = resetNextUnitWork();\n    }\n\n    if (nextUnitWork && deadline.timeRemaining() > ENOUGH_TIME) {\n        nextUnitWork = performUnitWork(nextUnitWork);\n    }\n\n    // 如果所有任务执行完毕则提交所有任务\n    if (pendingCommit) {\n        commitAllWork(pendingCommit);\n    }\n}\n\n// 获取下一个要操作的 fiber\n// 更新或渲染的过程就是构建 fiber 树的过程，每次都是从根 fiber 开始\nfunction resetNextUnitWork() {\n    const task = taskQueue.shift();\n    if (task === undefined) {\n        return null\n    }\n\n    if (task.tag === HOST_ROOT) {\n        nextUnitWork = {\n            tag      : HOST_ROOT,\n            statNode : task.dom,\n            props    : task.props,\n            alternate: task.dom[ROOT_FIBER],\n        };\n        return nextUnitWork;\n    }\n\n    const currentFiber = task.instance[INSTANCE_INNER_FIBER];\n    // 有疑问 - use while get root fiber\n    const getRootFiber = (fiber) => {\n        if (fiber.tag !== HOST_ROOT) {\n            fiber = fiber.parent;\n        }\n        return fiber;\n    };\n    const oldRootFiber = getRootFiber(currentFiber);\n    nextUnitWork = {\n        tag      : HOST_ROOT,\n        statNode : oldRootFiber.statNode,\n        props    : oldRootFiber.props,\n        alternate: oldRootFiber\n    };\n\n    if (task.partialState) {\n        currentFiber.partialState = task.partialState;\n    }\n    return nextUnitWork\n}\n\nfunction performUnitWork(fiber) {\n    beginWork(fiber);\n\n    // 采用深度优先遍历 fiber 树，先遍历孩子节点\n    if (fiber.child) {\n        return fiber.child\n    }\n\n    while (fiber) {\n        completeWork(fiber)\n        if (fiber.sibling) {\n            return fiber.sibling;\n        }\n\n        // 父节点兄弟节点\n        fiber = fiber.parent;\n    }\n    return null\n}\n\nfunction beginWork(fiber) {\n    if (fiber.tag === COMPOSITE_COMPONENT) {\n        workInCompositeComponent(fiber);\n    } else {\n        workInHostComponent(fiber);\n    }\n}\n\n// 将各 fiber 的操作以及它需要操作的孩子 fiber 都提交到父 fiber\nfunction completeWork(fiber) {\n    if (fiber.tag === COMPOSITE_COMPONENT && fiber.statNode != null) {\n        fiber.statNode[INSTANCE_INNER_FIBER] = fiber;\n    }\n\n    // 向父 fiber 提交所有操作\n    if (fiber.parent) {\n        const childEffects = fiber.effects || [];\n        const parentEffects = fiber.parent.effects || [];\n        fiber.parent.effects = [...parentEffects, ...childEffects, fiber];\n    } else {\n        pendingCommit = fiber;\n    }\n}\n\n// 提交阶段就是对所有需要操作的 fiber 进行遍历，将他们的结果呈现在浏览器\nfunction commitAllWork(rootFiber) {\n    const { effects } = rootFiber;\n    for (let i = 0; i < effects.length; i++) {\n        const fiber = effects[i];\n        const parentNodeFiber = upwardUtilNodeFiber(fiber);\n        const nodeFiber = downwardUtilNodeFiber(fiber);\n\n        if (nodeFiber) {\n            const parentNode = parentNodeFiber.statNode;\n            const node = nodeFiber.statNode;\n\n            if (fiber.effectTag === OPERATION.ADD) {\n                appendNode(parentNode, node)\n            } else if (fiber.effectTag === OPERATION.REMOVE) {\n                removeNode(parentNode, node);\n            } else if (fiber.effectTag === OPERATION.REPLACE) {\n                const prevNodeFiber = downwardUtilNodeFiber(nodeFiber.alternate);\n\n                if (prevNodeFiber) {\n                    replaceNode(parentNode, node, prevNodeFiber.statNode);\n                }\n            } else if (fiber.effectTag === OPERATION.UPDATE) {\n                if (fiber.tag === HOST_COMPONENT) {\n                    updateNodeAttributes(node, fiber.props, fiber.alternate.props);\n                }\n            }\n        }\n\n        const fiberInstance = fiber.type.isReactComponent ? fiber.statNode : null;\n        if (fiberInstance && fiberInstance.isFirstCreate && typeof fiberInstance.componentDidMount === 'function') {\n            fiberInstance.componentDidMount();\n        }\n    }\n}\n\nfunction downwardUtilNodeFiber(fiber) {\n    while (fiber.tag === COMPOSITE_COMPONENT) {\n        fiber = fiber.child;\n    }\n    return fiber;\n}\n\nfunction upwardUtilNodeFiber(fiber) {\n    fiber = fiber.parent;\n    while (fiber.tag === COMPOSITE_COMPONENT) {\n        fiber = fiber.parent;\n    }\n    return fiber;\n}\n\nfunction workInCompositeComponent(fiber) {\n    const { type, props, alternate, statNode, partialState } = fiber;\n\n    // 未更新直接克隆\n    if (alternate && alternate.props === props && !partialState) {\n        cloneChildrenFiber(fiber);\n        return;\n    }\n\n    let instance = statNode;\n    const isClassComponent = type.isReactComponent;\n    if (isClassComponent) {\n        if (!instance) {\n            instance = new type(props);\n            instance.isFirstCreate = true;\n        } else {\n            instance.isFirstCreate = false;\n        }\n\n        instance.props = props;\n        instance.state = Object.assign({}, instance.state, partialState);\n    }\n\n    fiber.statNode = instance;\n\n    const childrenElements = instance ? instance.render() : type(props);\n    reconcileChildren(fiber, childrenElements);\n}\n\nfunction workInHostComponent(fiber) {\n    const { props = {} } = fiber;\n\n    if (!fiber.statNode) {\n        fiber.statNode = createNode({\n            type: fiber.type,\n            props: fiber.props\n        })\n    }\n\n    const childrenElements = props.children;\n    reconcileChildren(fiber, childrenElements);\n}\n\nfunction reconcileChildren(fiber, elements) {\n    elements = elements ? (Array.isArray(elements) ? elements : [elements]) : [];\n\n    let oldChildFiber = fiber.alternate ? fiber.alternate.child : null;\n    let newChildFiber = null;\n    let index = 0;\n\n    while (index < elements.length || oldChildFiber) {\n        const prevFiber = newChildFiber;\n        const element = elements[index];\n\n        if (element){\n            newChildFiber = {\n                tag: typeof element.type === 'function' ? COMPOSITE_COMPONENT : HOST_COMPONENT,\n                type: element.type,\n                props: element.props,\n                parent: fiber,\n                alternate: oldChildFiber\n            }\n        } else {\n            newChildFiber = null;\n        }\n\n        if (!oldChildFiber && element) {\n            newChildFiber.effectTag = OPERATION.ADD\n        }\n\n        if (oldChildFiber) {\n            if (!element) {\n                // 移除 fiber tree，需存储\n                oldChildFiber.effectTag = OPERATION.REMOVE;\n                fiber.effects = fiber.effects || [];\n                fiber.effects.push(oldChildFiber);\n            } else if (element && newChildFiber.type !== oldChildFiber.type) {\n                newChildFiber.effectTag = OPERATION.REPLACE\n            } else if (element && (oldChildFiber.props !== newChildFiber.props || oldChildFiber.partialState)) {\n                newChildFiber.partialState = oldChildFiber.partialState;\n                newChildFiber.statNode = oldChildFiber.statNode;\n                newChildFiber.effectTag = OPERATION.UPDATE;\n            }\n        }\n\n        // 更改指向\n        if (oldChildFiber) {\n            oldChildFiber = oldChildFiber.sibling;\n        }\n\n        if (index === 0) {\n            fiber.child = newChildFiber;\n        } else {\n            prevFiber.sibling = newChildFiber;\n        }\n\n        index += 1;\n    }\n}\n\nfunction cloneChildrenFiber(parentFiber) {\n    let oldFiber = parentFiber.alternate.child;\n    let prevFiber = null;\n\n    // 遍历更改指向\n    while (oldFiber) {\n        const newFiber = {\n            ...oldFiber,\n            alternate: oldFiber,\n            parent: parentFiber,\n        };\n\n        if (!prevFiber) {\n            parentFiber.child = newFiber;\n        } else {\n            prevFiber.sibling = newFiber;\n        }\n\n        prevFiber = newFiber;\n        oldFiber = oldFiber.sibling;\n    }\n}\n\nexport class Component {\n    constructor(props) {\n        this.props = props\n    }\n\n    setState (nextState) {\n        scheduleUpdate(this, nextState);\n    }\n}\n\nComponent.isReactComponent = true;\n","/**\n * @Author: huangw1\n * @Date: 2019-11-20 17:15\n */\n\nimport {TEXT_NODE} from \"./constants\";\n\nexport function h(type, props, ...children) {\n    props = props || {};\n\n    children = [].concat(...children)\n        .filter(child => child !== null && typeof child !== 'boolean')\n        .map(child => (typeof child === 'number' ? String(child) : child))\n        .map(child => (typeof child === 'string' ? h(TEXT_NODE, { textContent: child }) : child));\n\n    props.children = children;\n\n    return { type, props };\n}\n","/**\n * @Author: huangw1\n * @Date: 2019-11-21 10:39\n */\n\nimport {Component, render} from \"../src/reconciler/fiber\";\nimport {h} from \"../src/h\";\n\nclass App extends Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            count: 0\n        }\n    }\n\n    render() {\n        const state = this.state;\n        return (\n            <div onClick={() => {\n                this.setState({\n                    count: ++state.count\n                })\n            }}>{state.count}</div>\n        )\n    }\n}\n\nrender(<App/>, document.getElementById('fiber-app'));\n"]}